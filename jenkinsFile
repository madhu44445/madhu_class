pipeline {
        node("ActiveMQ node"){
	try {
	    mail('Started', "Build has been Triggered.")
                def downloadSpec = """{
 			"files": [
  			{
      				"pattern": "/root/amplience-ops-apps-92305eba2e68/work/ops-apps/terraform/web-activemq//*",
      				"target": "/root/amplience-ops-apps-92305eba2e68/work/ops-apps/terraform/web-activemq //*"
    			}
 		   ]
	}"""
		stage('Fetching Source code from BitBucket'){
			 deleteDir()
			git config http.sslVerify "false"
			url: 'https://github.com/madhu44445/madhu_class.git'
		}
   stage name: 'build', concurrency: 1
        sh "terraform init"

   stage name: 'plan', concurrency: 1
        sh "terraform plan --out plan"

   stage name: 'deploy', concurrency: 1
        def deploy_validation = input(
            id: 'Deploy',
            message: 'Let\'s continue the deploy plan',
            type: "boolean")

        sh "terraform apply "
}

